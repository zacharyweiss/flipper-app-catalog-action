name: Update Flipper Application Catalog
description: "Stages PR branch for App Catalog update in owner's fork"
inputs:
  CATALOG_UPDATE_TOKEN: 
    description: 'Repo-scoped Personal Access Token'
    required: true
  CATALOG_REPO: 
    description: 'Name of App Catalog repo'
    required: false
    default: flipper-application-catalog
  CATALOG_FORK_OWNER: 
    description: 'Owner of App Catalog fork, in which to stage PR branch'
    required: false
    default: ${{ github.repository_owner }}
  CATALOG_UPSTREAM_OWNER: 
    description: 'Owner of upstream App Catalog, to which PRs are opened'
    required: false
    default: flipperdevices
  COMMIT_USERNAME: 
    description: 'Name to use for automated commits'
    required: false
    default: ${{ github.actor }}
  COMMIT_EMAIL: 
    description: 'Email to use for automated commits'
    required: false
    default: ${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com
  GIT_LOG_PRETTY_FORMAT: 
    description: 'Format for git log pretty-printing; result is used as manifest.yml changelog'
    required: false
    default: "%as %h (%an) %s"
  DRY_RUN:
    description: 'For action testing purposes only; fills example data in manifest.yml for apps not yet in the catalog, instead of updating a preexisting manifest'
    required: false
    default: false
outputs:
  V_MAJOR:
    description: 'FAP version major'
    value: ${{ steps.app_fam.outputs.V_MAJOR }}
  V_MINOR:
    description: 'FAP version minor'
    value: ${{ steps.app_fam.outputs.V_MINOR }}
  NAME:
    description: 'Sanitized FAP name (drops brackets, strips whitespace)'
    value: ${{ steps.app_fam.outputs.NAME }}
  APPID:
    description: 'FAP appid'
    value: ${{ steps.app_fam.outputs.APPID }}
  BRANCH_NAME:
    description: 'Name of PR branch in App Catalog fork'
    value: ${{ steps.app_fam.outputs.BRANCH_NAME }}
  MANIFEST_PATH:
    description: 'Path to manifest.yml in App Catalog'
    value: ${{ steps.update_manifest.outputs.MANIFEST_PATH }}
  CHANGES:
    description: 'Changes between old and new commit SHAs'
    value: ${{ steps.update_manifest.outputs.CHANGES }}
  OLD_SHA:
    description: 'Old commit SHA in manifest.yml'
    value: ${{ steps.update_manifest.outputs.OLD_SHA }}
runs:
  using: "composite"
  steps:
    - name: Checkout app repo `${{ github.repository }}`
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: app
        
    - name: Get application.fam details
      id: app_fam
      shell: bash
      run: |
        cd app
        NAME=$(grep -oP '(?<=name=\").*(?=\")' application.fam)
        APPID=$(grep -oP '(?<=appid=\").*(?=\")' application.fam)
        FAP_CATEGORY=$(grep -oP '(?<=fap_category=\").*(?=\")' application.fam)
        FAP_VERSION=$(grep -oP '(?<=fap_version=\()\d+, \d+(?=\))' application.fam)

        V_MAJOR=$(echo $FAP_VERSION | cut -d "," -f 1 | xargs)
        V_MINOR=$(echo $FAP_VERSION | cut -d "," -f 2 | xargs)
        
        echo "V_MAJOR=$V_MAJOR" >> "$GITHUB_OUTPUT"
        echo "V_MINOR=$V_MINOR" >> "$GITHUB_OUTPUT"
        echo "NAME=$(echo $NAME | sed -e 's/\[.*\]//' | xargs)" >> "$GITHUB_OUTPUT"
        echo "APPID=$APPID" >> "$GITHUB_OUTPUT"
        echo "FAP_CATEGORY=$FAP_CATEGORY" >> "$GITHUB_OUTPUT"
        echo "BRANCH_NAME=${{ inputs.CATALOG_FORK_OWNER }}/${APPID}_${V_MAJOR}.${V_MINOR}" >> "$GITHUB_OUTPUT"
        
    - name: Checkout catalog fork `${{ inputs.CATALOG_FORK_OWNER }}/${{ inputs.CATALOG_REPO }}`
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.CATALOG_FORK_OWNER }}/${{ inputs.CATALOG_REPO }}
        path: ${{ inputs.CATALOG_REPO }}
        token: ${{ inputs.CATALOG_UPDATE_TOKEN }}
        
    - name: Create branch `${{ steps.app_fam.outputs.BRANCH_NAME }}`
      shell: bash
      run: |
        cd ${{ inputs.CATALOG_REPO }}
        git checkout -b "${{ steps.app_fam.outputs.BRANCH_NAME }}"
        git remote add upstream "https://x-access-token:${{ inputs.CATALOG_UPDATE_TOKEN }}@github.com/${{ inputs.CATALOG_UPSTREAM_OWNER }}/${{ inputs.CATALOG_REPO }}.git"        
        git fetch upstream main
        git remote -v
        git rebase --autosquash --autostash "upstream/main"

    - name: Update manifest.yml `commit_sha` and `changelog`
      id: update_manifest
      shell: bash
      run: |
        MANIFEST_PATH=applications/${{ steps.app_fam.outputs.FAP_CATEGORY }}/${{ steps.app_fam.outputs.APPID }}/manifest.yml
        echo "MANIFEST_PATH=$MANIFEST_PATH" >> "$GITHUB_OUTPUT"
        
        if [ ${{ inputs.DRY_RUN }} ]; then
          mkdir -p ${{ inputs.CATALOG_REPO }}/$(dirname $MANIFEST_PATH)
          touch ${{ inputs.CATALOG_REPO }}/$MANIFEST_PATH
          OLD_SHA=9b27c27b306dc46ea342f3aa32e42ab3f5eaf510
        else
          OLD_SHA=$(grep -oP '(?<=commit_sha: )[a-zA-Z0-9]+' ${{ inputs.CATALOG_REPO }}/$MANIFEST_PATH)
        fi
        echo "OLD_SHA=$OLD_SHA" >> "$GITHUB_OUTPUT"
        
        cd app
        CHANGES=$(git log --oneline --no-merges --pretty=format:"${{ inputs.GIT_LOG_PRETTY_FORMAT }}" $OLD_SHA..${{ github.sha }} )
        echo "CHANGES=$CHANGES" >> "$GITHUB_OUTPUT"
        cd ..

        if [ ${{ inputs.DRY_RUN }} ]; then
          cat >${{ inputs.CATALOG_REPO }}/$MANIFEST_PATH <<EOF
          sourcecode:
            type: git
            location:
              origin: https://github.com/${{ github.repository }}.git
              commit_sha: ${{ github.sha }}
          short_description: Test application
          description: "foo"
          changelog: |
          $(echo $CHANGES | sed 's/^/  /')
          screenshots:
            - screenshots/ss0.png
          EOF
        else
          sed -i 's/commit_sha: .*/commit_sha: ${{ github.sha }}/' ${{ inputs.CATALOG_REPO }}/$MANIFEST_PATH
#          sed -n '/changelog: /,/[^ \t]/changelog: \|\n  $(echo $CHANGES | sed 's/^/  /')/' ${{ inputs.CATALOG_REPO }}/$MANIFEST_PATH
        fi

    - name: Commit
      shell: bash
      run: |
        cd ${{ inputs.CATALOG_REPO }}
        git config user.name "${{ inputs.COMMIT_USERNAME }}"
        git config user.email "${{ inputs.COMMIT_EMAIL }}"
        git add .
        git commit -m "Update ${{ steps.app_fam.outputs.NAME }} manifest for v${{ steps.app_fam.outputs.V_MAJOR }}.${{ steps.app_fam.output.V_MINOR }} @ ${{ github.sha }}"
#        git push --force -u origin HEAD

    - name: Push
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.CATALOG_UPDATE_TOKEN }}
        directory: ${{ inputs.CATALOG_REPO }}
        branch: ${{ steps.app_fam.outputs.BRANCH_NAME }}
        repository: ${{ inputs.CATALOG_FORK_OWNER }}/${{ inputs.CATALOG_REPO }}
        force: true
